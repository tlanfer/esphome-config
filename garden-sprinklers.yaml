substitutions:
  project: garden
  id: garden-sprinkler

esphome:
  name: $id
  on_boot:
    - script.execute: update_total_time

esp8266:
  board: nodemcuv2

<<: !include common/logging.yaml
<<: !include common/api.yaml
<<: !include common/ota.yaml
<<: !include common/wifi.yaml

##### Irrigation control

globals:
  - id: last_start_value
    type: float
    restore_value: no
    initial_value: "0.0"

script:
  - id: update_total_time
    then:
      - delay: 200ms
      - sensor.template.publish:
          id: total_cycle_time
          state: !lambda |-
            int repeats = 1;
            if (id(lawn_sprinkler_ctrlr).repeat().has_value()) {
              repeats += id(lawn_sprinkler_ctrlr).repeat().value();
            }
            uint32_t cycle_duration = id(lawn_sprinkler_ctrlr).total_cycle_time_enabled_valves();
            uint32_t total_duration = repeats * cycle_duration;
            return total_duration;

sensor:
  - platform: template
    name: "Total cycle duration"
    id: total_cycle_time
    unit_of_measurement: 's'
    device_class: duration

  - platform: template
    name: "Wasser zuletzt"
    lambda: "return id(water_total).state - id(last_start_value);"
    update_interval: 1s
    unit_of_measurement: "L"
    accuracy_decimals: 1
    device_class: "water"
    icon: mdi:water
    filters:
      - delta: 0.1

  - platform: pulse_meter
    id: water_meter
    pin: D5
    name: "Fließrate"
    icon: mdi:water
    timeout: 5s
    unit_of_measurement: "L/min"
    accuracy_decimals: 2
    device_class: "volume_flow_rate"
    state_class: "measurement"
    filters:
      - lambda: "return x / (id(pulses_per_liter).state*1.0);"

    on_value_range:
      - below: 0.1
        then:
          - binary_sensor.template.publish:
              id: water_active
              state: OFF
      - above: 0.1
        then:
          - binary_sensor.template.publish:
              id: water_active
              state: ON

    total:
      name: "Wasser Gesamt"
      id: water_total
      unit_of_measurement: "L"
      accuracy_decimals: 1
      device_class: "water"
      state_class: "total_increasing"
      icon: mdi:water
      filters:
        - lambda: "return x / (id(pulses_per_liter).state*1.0);"

binary_sensor:
  - platform: template
    id: water_active
    name: "Wasser fließt"
    on_press:
      if:
        condition:
          for:
            time: 30s
            condition:
              binary_sensor.is_off: water_active
        then:
          - lambda: "id(last_start_value) = id(water_total).state;"

button:
  - platform: template
    name: "Reset"
    on_press:
      then:
        - pulse_meter.set_total_pulses:
            id: water_meter
            value: 0

number:
  - platform: template
    entity_category: config
    name: "Pulses per liter"
    id: pulses_per_liter
    min_value: 100
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
    initial_value: 360

sprinkler:
  - id: lawn_sprinkler_ctrlr
    main_switch:
      name: "Bewässerung"
      on_turn_on:
        script.execute: update_total_time

    auto_advance_switch: "Auto-Modus"

    multiplier_number:
      name: "Laufzeit Multiplikator"
      initial_value: 1
      min_value: 0.1
      max_value: 3
      set_action:
        - script.execute: update_total_time

    repeat_number:
      name: "Laufzeit wiederholen"
      initial_value: 0
      min_value: 0
      max_value: 5
      set_action:
        - script.execute: update_total_time

    valve_overlap: 1s
    valves:
      - valve_switch: "Vorne 1"
        valve_switch_id: relay3
        enable_switch: "Vorne 1 aktiv"
        run_duration_number:
          name: "Vorne 1 Laufzeit"
          min_value: 10
          max_value: 1800
          set_action:
            - script.execute: update_total_time

      - valve_switch: "Vorne 2"
        valve_switch_id: relay4
        enable_switch: "Vorne 2 aktiv"
        run_duration_number:
          name: "Vorne 2 Laufzeit"
          min_value: 10
          max_value: 1800
          set_action:
            - script.execute: update_total_time

      - valve_switch: "Hinten 1"
        valve_switch_id: relay1
        enable_switch: "Hinten 1 aktiv"
        run_duration_number:
          name: "Hinten 1 Laufzeit"
          min_value: 10
          max_value: 1800
          set_action:
            - script.execute: update_total_time

      - valve_switch: "Hinten 2"
        valve_switch_id: relay2
        enable_switch: "Hinten 2 aktiv"
        run_duration_number:
          name: "Hinten 2 Laufzeit"
          min_value: 10
          max_value: 1800
          set_action:
            - script.execute: update_total_time

switch:
# Hinten Ecke
  - platform: gpio
    id: relay1
    pin: D1
    restore_mode: ALWAYS_OFF
    inverted: true

# Hinten Balkon
  - platform: gpio
    id: relay2
    pin: D2
    restore_mode: ALWAYS_OFF
    inverted: true

# Vorne Haus
  - platform: gpio
    id: relay3
    pin: D3
    restore_mode: ALWAYS_OFF
    inverted: true

# Vorne Einfahrt
  - platform: gpio
    id: relay4
    pin: D4
    restore_mode: ALWAYS_OFF
    inverted: true

